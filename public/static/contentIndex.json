{"Strategy-Pattern":{"title":"Strategy Pattern","links":["tags/behavioral"],"tags":["behavioral"],"content":"behavioral\nDefinition\nIt Defines a family of algorithms encapsulates each one, and makes them interchangeable. Strategy Lets the algorithms vary independently from clients that use it.\nReal World Analogy"},"index":{"title":"Java Design Patterns","links":["Strategy-Pattern"],"tags":[],"content":"What is Design Pattern ?\nDesign patterns are typical solutions to commonly occurring problems in software design. They are like pre-made blueprints that you can customize to solve a recurring design problem in your code.\nThree Main Patterns\n\nCreational patterns provide object creation mechanisms that increase flexibility and reuse of existing code.\nStructural patterns explain how to assemble objects and classes into larger structures, while keeping these structures flexible and efficient.\nBehavioral patterns take care of effective communication and the assignment of responsibilities between objects.\n\n\nContents:\n\nStrategy Pattern\n\n\n\n\n                  \n                  Note\n                  \n                \n\nAll the Patterns and code Examples are taken from the Book titled Head First Design Patterns\n\n"}}